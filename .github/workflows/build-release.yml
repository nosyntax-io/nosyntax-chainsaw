name: Build Release

on:
  workflow_dispatch:
    inputs:
      job-id:
        description: "Job ID"
        required: true
      build-info:
        description: "Build Info"
        required: true
      project-id:
        description: "Project ID"
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build Release
    runs-on: ubuntu-latest

    env:
      JOB_ID: ${{ inputs['job-id'] }}
      BUILD_INFO: ${{ inputs['build-info'] }}
      PROJECT_ID: ${{ inputs['project-id'] }}
      BUILD_ID: ${{ fromJson(inputs['build-info']).id }}
      AWS_REGION: us-east-1

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"
          cache: "gradle"

      - name: Set Up Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_OIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Generate Dummy APK
        run: touch app-release.apk

      - name: Upload to S3
        run: |
          aws s3 cp app-release.apk s3://${{ secrets.AWS_BUCKET }}/projects/${{ env.PROJECT_ID }}/artifacts/app-release.apk

      - name: Update Build Status
        run: |
          response=$(curl -s -X PATCH "https://52163969920f.ngrok-free.app/api/projects/${{ env.PROJECT_ID }}/builds/${{ env.BUILD_ID }}" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -H "Authorization: Bearer 1|AP1tvWXjdR5qJ7akGq69L1RvCUmhHIxmLZ0hBMXVa7fabaed" \
            -d "run_id=${{ github.run_id }}&status=success")
